From b5c6f139f0f7b3972d956e7246a88facee18e842 Mon Sep 17 00:00:00 2001
From: zejun <zejun.chen@intel.com>
Date: Wed, 29 Nov 2023 15:10:51 +0800
Subject: [PATCH 19/31] Cherry pick PR to enable nested cos and sin (#198)

Signed-off-by: Chen, Zejun <zejun.chen@intel.com>
---
 aten/src/ATen/native/native_functions.yaml           | 3 +++
 aten/src/ATen/native/nested/NestedTensorUnaryOps.cpp | 8 ++++++++
 test/test_nestedtensor.py                            | 4 +++-
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/aten/src/ATen/native/native_functions.yaml b/aten/src/ATen/native/native_functions.yaml
index f95e1ace6fc..27d8a35eb61 100644
--- a/aten/src/ATen/native/native_functions.yaml
+++ b/aten/src/ATen/native/native_functions.yaml
@@ -1720,6 +1720,8 @@
   device_check: NoCheck   # TensorIterator
   variants: function, method
   structured_delegate: cos.out
+  dispatch:
+    NestedTensorCPU, NestedTensorCUDA: cos_nested
   tags: [core, pointwise]
 
 - func: cos_(Tensor(a!) self) -> Tensor(a!)
@@ -5076,6 +5078,7 @@
   dispatch:
     SparseCsrCPU, SparseCsrCUDA: sin_sparse_csr
     SparseCPU, SparseCUDA: sin_sparse
+    NestedTensorCPU, NestedTensorCUDA: sin_nested
   tags: [core, pointwise]
 
 - func: sin_(Tensor(a!) self) -> Tensor(a!)
diff --git a/aten/src/ATen/native/nested/NestedTensorUnaryOps.cpp b/aten/src/ATen/native/nested/NestedTensorUnaryOps.cpp
index 9cfc53b60a2..e01535323ea 100644
--- a/aten/src/ATen/native/nested/NestedTensorUnaryOps.cpp
+++ b/aten/src/ATen/native/nested/NestedTensorUnaryOps.cpp
@@ -124,5 +124,13 @@ Tensor& NestedTensor_silu_(Tensor& self){
   return self;
 }
 
+Tensor sin_nested(const Tensor& self) {
+  return map_nt(self, at::sin);
+}
+
+Tensor cos_nested(const Tensor& self) {
+  return map_nt(self, at::cos);
+}
+
 } // namespace native
 } // namespace at
diff --git a/test/test_nestedtensor.py b/test/test_nestedtensor.py
index 6582a493378..95aeed0b319 100644
--- a/test/test_nestedtensor.py
+++ b/test/test_nestedtensor.py
@@ -865,7 +865,9 @@ class TestNestedTensorDeviceType(TestCase):
                           subtest(torch.abs, name="abs"),
                           subtest(torch.abs_, name="abs_"),
                           subtest(torch.sgn, name="sgn"),
-                          subtest(torch.logical_not, name='logical_not'),])
+                          subtest(torch.logical_not, name='logical_not'),
+                          subtest(torch.sin, name='sin'),
+                          subtest(torch.cos, name='cos')])
     def test_activations(self, device, func):
         nt, nt_noncontiguous = random_nt_noncontiguous_pair((2, 3, 6, 7), device=device, dtype=torch.float32)
         nested_result = func(nt)
-- 
2.34.1

